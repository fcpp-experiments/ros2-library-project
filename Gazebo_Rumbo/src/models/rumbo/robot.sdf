<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from robot.xacro                    | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<sdf name="rumbo" version="1.6">
  <model name="rumbo">
    <pose>0 0 0.1 0 0 0</pose>
    <static>false</static>
    <link name="base_link">
      <pose>0 0 0.07 0 0 0</pose>
      <inertial>
        <!--inertial properties of the link mass, inertia matrix-->
        <mass>3</mass>
        <inertia>
          <ixx>0.095329</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.381317</iyy>
          <iyz>0</iyz>
          <izz>0.476646</izz>
        </inertia>
      </inertial>
      <visual name="visual">
        <geometry>
          <cylinder>
            <length>0.1</length>
            <radius>0.16</radius>
          </cylinder>
        </geometry>
        <material>
          <ambient>0.0 1 0.0 1</ambient>
          <diffuse>0.0 1 0.0 1</diffuse>
          <specular>0.0 1 0.0 1</specular>
        </material>
      </visual>
      <collision name="collision">
        <geometry>
          <cylinder>
            <length>0.1</length>
            <radius>0.16</radius>
          </cylinder>
        </geometry>
      </collision>
    </link>
    <link name="R_wheel">
      <pose>0.0 -0.16 0.04 -1.57 0 0</pose>
      <inertial>
        <mass>1</mass>
        <inertia>
          <ixx>0.043333</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.043333</iyy>
          <iyz>0</iyz>
          <izz>0.08</izz>
        </inertia>
      </inertial>
      <visual name="visual">
        <geometry>
          <cylinder>
            <length>0.02</length>
            <radius>0.04</radius>
          </cylinder>
        </geometry>
      </visual>
      <collision name="collision">
        <geometry>
          <cylinder>
            <length>0.02</length>
            <radius>0.04</radius>
          </cylinder>
        </geometry>
      </collision>
    </link>
    <link name="L_wheel">
      <pose>0.0 0.16 0.04 -1.57 0 0</pose>
      <inertial>
        <mass>1</mass>
        <inertia>
          <ixx>0.043333</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.043333</iyy>
          <iyz>0</iyz>
          <izz>0.08</izz>
        </inertia>
      </inertial>
      <visual name="visual">
        <geometry>
          <cylinder>
            <length>0.02</length>
            <radius>0.04</radius>
          </cylinder>
        </geometry>
      </visual>
      <collision name="collision">
        <geometry>
          <cylinder>
            <length>0.02</length>
            <radius>0.04</radius>
          </cylinder>
        </geometry>
      </collision>
    </link>
    <link name="caster1">
      <pose> 0.14 0.0 0.02 0 0 0</pose>
      <inertial>
        <mass>1</mass>
        <inertia>
          <ixx>0.016</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.016</iyy>
          <iyz>0</iyz>
          <izz>0.016</izz>
        </inertia>
      </inertial>
      <visual name="visual">
        <geometry>
          <sphere>
            <radius>0.02</radius>
          </sphere>
        </geometry>
      </visual>
      <collision name="collision">
        <geometry>
          <sphere>
            <radius>0.02</radius>
          </sphere>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>0</mu>
              <mu2>0</mu2>
              <slip1>1.0</slip1>
              <slip2>1.0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
    </link>
    <link name="caster2">
      <pose> -0.14 0.0 0.02 0 0 0</pose>
      <inertial>
        <mass>1.5</mass>
        <inertia>
          <ixx>0.016</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.016</iyy>
          <iyz>0</iyz>
          <izz>0.016</izz>
        </inertia>
      </inertial>
      <visual name="visual">
        <geometry>
          <sphere>
            <radius>0.02</radius>
          </sphere>
        </geometry>
      </visual>
      <collision name="collision">
        <geometry>
          <sphere>
            <radius>0.02</radius>
          </sphere>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>0</mu>
              <mu2>0</mu2>
              <slip1>1.0</slip1>
              <slip2>1.0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
    </link>
    <link name="base_laser">
      <pose> 0.14 0.0 0.12 0 0 0</pose>
      <visual name="visual">
        <geometry>
          <sphere>
            <radius>0.02</radius>
          </sphere>
        </geometry>
        <material>
          <ambient>1.0 0.0 0.0 1</ambient>
          <diffuse>1.0 0.0 0.0 1</diffuse>
          <specular>1.0 0.0 0.0 1</specular>
        </material>
      </visual>
      <collision name="collision">
        <geometry>
          <sphere>
            <radius>0.02</radius>
          </sphere>
        </geometry>
      </collision>
      <sensor name="lidar_sensor" type="ray">
        <pose>0 0 0.02 0 0 0</pose>
        <always_on>1</always_on>
        <update_rate>30</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>36</samples>
              <resolution>1</resolution>
              <min_angle>-3.14</min_angle>
              <max_angle>3.14</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.10</min>
            <max>12.0</max>
            <resolution>0.01</resolution>
          </range>
        </ray>
        <plugin filename="libgazebo_ros_ray_sensor.so" name="gazebo_ros_lidar">
          <ros>
            <remapping>~/out:=scan</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>base_laser</frame_name>
        </plugin>
      </sensor>
    </link>
    <joint name="base_to_R_wheel" type="revolute">
      <pose>0 0 0 0 0 0</pose>
      <parent>base_link</parent>
      <child>R_wheel</child>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
      <limit>
        <lower>-1.79769e+308</lower>
        <!--negative infinity-->
        <upper>1.79769e+308</upper>
        <!--positive infinity-->
      </limit>
    </joint>
    <joint name="base_to_L_wheel" type="revolute">
      <pose>0 0 0 0 0 0</pose>
      <parent>base_link</parent>
      <child>L_wheel</child>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
      <limit>
        <lower>-1.79769e+308</lower>
        <!--negative infinity-->
        <upper>1.79769e+308</upper>
        <!--positive infinity-->
      </limit>
    </joint>
    <joint name="caster_wheel1" type="ball">
      <pose>0 0 0 0 0 0</pose>
      <parent>base_link</parent>
      <child>caster1</child>
    </joint>
    <joint name="caster_wheel2" type="ball">
      <pose>0 0 0 0 0 0</pose>
      <parent>base_link</parent>
      <child>caster2</child>
    </joint>
    <joint name="base_laser_to_base" type="fixed">
      <pose>0 0 0 0 0 0</pose>
      <parent>base_link</parent>
      <child>base_laser</child>
    </joint>
    <!--PLUGINS-->
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <ros>
        <remapping>/tf:=tf</remapping>
      </ros>
      <update_rate>62</update_rate>
      <left_joint>base_to_L_wheel</left_joint>
      <right_joint>base_to_R_wheel</right_joint>
      <wheel_separation>0.30</wheel_separation>
      <wheel_diameter>0.08</wheel_diameter>
      <wheel_acceleration>0.001</wheel_acceleration>
      <wheel_torque>0.002</wheel_torque>
      <command_topic>cmd_vel</command_topic>
      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>
      <odometry_source>1</odometry_source>
      <publish_wheel_tf>false</publish_wheel_tf>
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_joint_state>true</publish_wheel_joint_state>
      <legacy_mode>true</legacy_mode>
    </plugin>
    <plugin name='gazebo_ros_battery' filename='libgazebo_ros_battery.so'>
      <frame_id>base_link</frame_id>
      <ros>
        <remapping>~/battery_state:=battery_states</remapping>
        <remapping>~/battery_voltage:=battery_voltage</remapping>
      </ros>
      <battery_topic>battery_state</battery_topic>
      <consumer_topic>battery_consumer</consumer_topic>
      <battery_voltage_topic>battery_voltage</battery_voltage_topic>
      <publish_voltage>1</publish_voltage>
      <num_of_consumers>0</num_of_consumers>
      <technology>2</technology>
      <design_capacity>4.0</design_capacity>
      <number_of_cells>6</number_of_cells>
      <nominal_voltage>24</nominal_voltage>
      <full_charge_voltage>25.2</full_charge_voltage>
      <cut_off_voltage>18.0</cut_off_voltage>
      <internal_resistance>0.11</internal_resistance>
      <current_filter_tau>1</current_filter_tau>
      <polarization_constant>0.07</polarization_constant>
      <exponential_voltage>0.7</exponential_voltage>
      <exponential_capacity>3.0</exponential_capacity>
      <characteristic_time>420</characteristic_time>
      <reversible_voltage_temp>0.05</reversible_voltage_temp>
      <arrhenius_rate_polarization>850</arrhenius_rate_polarization>
      <capacity_temp_coeff>0.01</capacity_temp_coeff>
      <design_temperature>25</design_temperature>
      <temperature_response_tau>0.5</temperature_response_tau>
      <use_nonlinear_model>1</use_nonlinear_model>
      <update_rate>10</update_rate>
      <rosDebugLevel>Debug</rosDebugLevel>
    </plugin>
  </model>
</sdf>
